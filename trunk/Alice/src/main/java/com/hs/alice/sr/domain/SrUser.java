package com.hs.alice.sr.domain;

// Generated 2013. 4. 29 오후 2:46:51 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;

/**
 * SrUser generated by hbm2java
 */
@Entity
@Table(name = "SR_USER", schema = "ALICE")
public class SrUser implements java.io.Serializable {

	private int id;
	private SrUserCodeRole srUserCodeRole;
	private SrCompany srCompany;
	private String name;
	private String dept;
	private String pos;
	private String contact;
	private String email;
	private Set<SrInstall> srInstallsForManager = new HashSet<SrInstall>(0);
	private Set<SrCompany> srCompanies = new HashSet<SrCompany>(0);
	private Set<SrRequest> srRequestsForManager = new HashSet<SrRequest>(0);
	private Set<SrRequest> srRequestsForRequester = new HashSet<SrRequest>(0);
	private Set<SrInstall> srInstallsForInstaller = new HashSet<SrInstall>(0);

	public SrUser() {
	}

	public SrUser(int id) {
		this.id = id;
	}

	public SrUser(int id, SrUserCodeRole srUserCodeRole, SrCompany srCompany,
			String name, String dept, String pos, String contact, String email,
			Set<SrInstall> srInstallsForManager, Set<SrCompany> srCompanies,
			Set<SrRequest> srRequestsForManager,
			Set<SrRequest> srRequestsForRequester,
			Set<SrInstall> srInstallsForInstaller) {
		this.id = id;
		this.srUserCodeRole = srUserCodeRole;
		this.srCompany = srCompany;
		this.name = name;
		this.dept = dept;
		this.pos = pos;
		this.contact = contact;
		this.email = email;
		this.srInstallsForManager = srInstallsForManager;
		this.srCompanies = srCompanies;
		this.srRequestsForManager = srRequestsForManager;
		this.srRequestsForRequester = srRequestsForRequester;
		this.srInstallsForInstaller = srInstallsForInstaller;
	}

	@Id
	@TableGenerator(name="TABLE_GEN", table="ALICE_ID", pkColumnName="ID_NAME", 
		valueColumnName="ID_COUNT", pkColumnValue="SR_USER", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.TABLE, generator="TABLE_GEN")
	@Column(name = "ID", unique = true, nullable = false, precision = 8, scale = 0)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROLE")
	public SrUserCodeRole getSrUserCodeRole() {
		return this.srUserCodeRole;
	}

	public void setSrUserCodeRole(SrUserCodeRole srUserCodeRole) {
		this.srUserCodeRole = srUserCodeRole;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COMPANY")
	public SrCompany getSrCompany() {
		return this.srCompany;
	}

	public void setSrCompany(SrCompany srCompany) {
		this.srCompany = srCompany;
	}

	@Column(name = "NAME", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DEPT", length = 100)
	public String getDept() {
		return this.dept;
	}

	public void setDept(String dept) {
		this.dept = dept;
	}

	@Column(name = "POS", length = 100)
	public String getPos() {
		return this.pos;
	}

	public void setPos(String pos) {
		this.pos = pos;
	}

	@Column(name = "CONTACT", length = 100)
	public String getContact() {
		return this.contact;
	}

	public void setContact(String contact) {
		this.contact = contact;
	}

	@Column(name = "EMAIL", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srUserByManager")
	public Set<SrInstall> getSrInstallsForManager() {
		return this.srInstallsForManager;
	}

	public void setSrInstallsForManager(Set<SrInstall> srInstallsForManager) {
		this.srInstallsForManager = srInstallsForManager;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srUser")
	public Set<SrCompany> getSrCompanies() {
		return this.srCompanies;
	}

	public void setSrCompanies(Set<SrCompany> srCompanies) {
		this.srCompanies = srCompanies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srUserByManager")
	public Set<SrRequest> getSrRequestsForManager() {
		return this.srRequestsForManager;
	}

	public void setSrRequestsForManager(Set<SrRequest> srRequestsForManager) {
		this.srRequestsForManager = srRequestsForManager;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srUserByRequester")
	public Set<SrRequest> getSrRequestsForRequester() {
		return this.srRequestsForRequester;
	}

	public void setSrRequestsForRequester(Set<SrRequest> srRequestsForRequester) {
		this.srRequestsForRequester = srRequestsForRequester;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srUserByInstaller")
	public Set<SrInstall> getSrInstallsForInstaller() {
		return this.srInstallsForInstaller;
	}

	public void setSrInstallsForInstaller(Set<SrInstall> srInstallsForInstaller) {
		this.srInstallsForInstaller = srInstallsForInstaller;
	}

}
