package com.hs.alice.sr.domain;

// Generated 2013. 4. 29 오후 2:46:51 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SrCompany generated by hbm2java
 */
@Entity
@Table(name = "SR_COMPANY", schema = "ALICE")
public class SrCompany implements java.io.Serializable {

	private int id;
	private SrUser srUser;
	private SrInstall srInstall;
	private SrCompanyCodeDivision srCompanyCodeDivision;
	private String name;
	private String ceo;
	private String phone;
	private String address;
	private String web;
	private Date registed;
	private Set<SrRequest> srRequests = new HashSet<SrRequest>(0);
	private Set<SrUser> srUsers = new HashSet<SrUser>(0);

	public SrCompany() {
	}

	public SrCompany(int id) {
		this.id = id;
	}

	public SrCompany(int id, SrUser srUser, SrInstall srInstall,
			SrCompanyCodeDivision srCompanyCodeDivision, String name,
			String ceo, String phone, String address, String web,
			Date registed, Set<SrRequest> srRequests, Set<SrUser> srUsers) {
		this.id = id;
		this.srUser = srUser;
		this.srInstall = srInstall;
		this.srCompanyCodeDivision = srCompanyCodeDivision;
		this.name = name;
		this.ceo = ceo;
		this.phone = phone;
		this.address = address;
		this.web = web;
		this.registed = registed;
		this.srRequests = srRequests;
		this.srUsers = srUsers;
	}

	@Id
	@TableGenerator(name="TABLE_GEN", table="ALICE_ID", pkColumnName="ID_NAME", 
		valueColumnName="ID_COUNT", pkColumnValue="SR_COMPANY", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.TABLE, generator="TABLE_GEN")
	@Column(name = "ID", unique = true, nullable = false, precision = 8, scale = 0)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REGISTER")
	public SrUser getSrUser() {
		return this.srUser;
	}

	public void setSrUser(SrUser srUser) {
		this.srUser = srUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INSTALL")
	public SrInstall getSrInstall() {
		return this.srInstall;
	}

	public void setSrInstall(SrInstall srInstall) {
		this.srInstall = srInstall;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DIVISION")
	public SrCompanyCodeDivision getSrCompanyCodeDivision() {
		return this.srCompanyCodeDivision;
	}

	public void setSrCompanyCodeDivision(
			SrCompanyCodeDivision srCompanyCodeDivision) {
		this.srCompanyCodeDivision = srCompanyCodeDivision;
	}

	@Column(name = "NAME", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "CEO", length = 100)
	public String getCeo() {
		return this.ceo;
	}

	public void setCeo(String ceo) {
		this.ceo = ceo;
	}

	@Column(name = "PHONE", length = 100)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "ADDRESS", length = 200)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "WEB", length = 100)
	public String getWeb() {
		return this.web;
	}

	public void setWeb(String web) {
		this.web = web;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "REGISTED", length = 7)
	public Date getRegisted() {
		return this.registed;
	}

	public void setRegisted(Date registed) {
		this.registed = registed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srCompany")
	public Set<SrRequest> getSrRequests() {
		return this.srRequests;
	}

	public void setSrRequests(Set<SrRequest> srRequests) {
		this.srRequests = srRequests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srCompany")
	public Set<SrUser> getSrUsers() {
		return this.srUsers;
	}

	public void setSrUsers(Set<SrUser> srUsers) {
		this.srUsers = srUsers;
	}

}
