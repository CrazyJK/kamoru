<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<util:properties id="security" location="/WEB-INF/spring/conf/security.properties" />

	<http auto-config="true" use-expressions="true" entry-point-ref="jkEntryPoint">  
		<!-- access-denied-page="/accessDenied" deprecated 되었다고해서 아래 access-denied-handler로 바꿈-->

		<access-denied-handler error-page="#{security['accessDeniedUrl']}" />
		
		<intercept-url pattern="/" 				access="permitAll" />
		<intercept-url pattern="/jsp/**" 		access="permitAll" />
		<intercept-url pattern="/resources/**" 	access="permitAll" />
		<intercept-url pattern="/auth/**" 		access="permitAll" />
		<intercept-url pattern="/image/random"	access="permitAll" />

		<intercept-url pattern="/noaccess" 		access="hasRole('ROLE_NOACCESS')" />
		<intercept-url pattern="/manager**" 	access="hasRole('ROLE_MANAGER')" />
		<intercept-url pattern="/video**" 		access="hasRole('ROLE_CRAZY')" /><!--  or hasIpAddress('192.168.0.3') -->
		<intercept-url pattern="/image**" 		access="hasRole('ROLE_CRAZY')" />
		<intercept-url pattern="/**" 			access="hasRole('ROLE_USER')" />

		<form-login login-page="#{security['loginPageUrl']}"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailureHandler" />

		<remember-me key="kamoruRememberme" token-validity-seconds="600000" />

		<logout logout-success-url="#{security['logoutPageUrl']}"/>

		<!-- 동일ID의 다중 접속 설정
		<session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/auth/expiredSession" />
        </session-management> 
        -->
	</http>
	
	<authentication-manager>
		<authentication-provider ref="authenticationProvider"/> <!-- user-service-ref="kamoruUserService" -->
	</authentication-manager>

	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="hideUserNotFoundExceptions" value="false"/>
		<beans:property name="userDetailsService" ref="kamoruUserService"/>
		<beans:property name="passwordEncoder" ref="passwordEncoder"/>
	</beans:bean>
	
	<beans:bean id="kamoruUserService" class="jk.springframework.security.core.userdetails.KamoruUserService"/>

	<beans:bean id="passwordEncoder" class="jk.springframework.security.authentication.encoding.HandyPasswordEncoder"/>

	<beans:bean id="loginSuccessHandler" class="jk.springframework.security.web.authentication.KamoruAuthenticationSuccessHandler">
	 	<beans:property name="defaultTargetUrl" value="#{security['defaultTargetUrl']}"/>
	</beans:bean>
	
	<beans:bean id="loginFailureHandler" class="jk.springframework.security.web.authentication.KamoruAuthenticationFailureHandler">
	 	<beans:property name="defaultFailureUrl" value="#{security['defaultFailureUrl']}"/>
	</beans:bean>

	<beans:bean id="jkEntryPoint" class="jk.springframework.security.web.KamoruAuthenticationEntryPoint" >
	 	<beans:property name="defaultFailureUrl" value="#{security['defaultFailureUrl']}"/>
	</beans:bean>

</beans:beans>
