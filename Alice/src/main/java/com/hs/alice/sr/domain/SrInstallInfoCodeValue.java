package com.hs.alice.sr.domain;

// Generated 2013. 4. 29 오후 2:46:51 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;

/**
 * SrInstallInfoCodeValue generated by hbm2java
 */
@Entity
@Table(name = "SR_INSTALL_INFO_CODE_VALUE", schema = "ALICE")
public class SrInstallInfoCodeValue implements java.io.Serializable {

	private int id;
	private SrInstallInfoCodeName srInstallInfoCodeName;
	private String value;
	private Set<SrInstallInfo> srInstallInfos = new HashSet<SrInstallInfo>(0);

	public SrInstallInfoCodeValue() {
	}

	public SrInstallInfoCodeValue(int id) {
		this.id = id;
	}

	public SrInstallInfoCodeValue(int id,
			SrInstallInfoCodeName srInstallInfoCodeName, String value,
			Set<SrInstallInfo> srInstallInfos) {
		this.id = id;
		this.srInstallInfoCodeName = srInstallInfoCodeName;
		this.value = value;
		this.srInstallInfos = srInstallInfos;
	}

	@Id
	@TableGenerator(name="TABLE_GEN", table="ALICE_ID", pkColumnName="ID_NAME", 
		valueColumnName="ID_COUNT", pkColumnValue="SR_INSTALL_INFO_CODE_VALUE", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.TABLE, generator="TABLE_GEN")
	@Column(name = "ID", unique = true, nullable = false, precision = 8, scale = 0)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NAME")
	public SrInstallInfoCodeName getSrInstallInfoCodeName() {
		return this.srInstallInfoCodeName;
	}

	public void setSrInstallInfoCodeName(
			SrInstallInfoCodeName srInstallInfoCodeName) {
		this.srInstallInfoCodeName = srInstallInfoCodeName;
	}

	@Column(name = "VALUE", length = 2000)
	public String getValue() {
		return this.value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "srInstallInfoCodeValue")
	public Set<SrInstallInfo> getSrInstallInfos() {
		return this.srInstallInfos;
	}

	public void setSrInstallInfos(Set<SrInstallInfo> srInstallInfos) {
		this.srInstallInfos = srInstallInfos;
	}

}
