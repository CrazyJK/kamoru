/**
 * Table name : map_member
 * Columns 
 * 		memberid
 * 		type : C(customer), M(member)
 * 		name
 * 		customid
 * 		latitude
 * 		longitude
 * 		status : if type is M, O(outing), B(business trip), D(desk job)
 * 		site
 * 		task
 * 		address
 * 		starttime
 * 		arrivaltime
 * 		dscpt
 * */

CREATE TABLE "KAMORU"."MAP_MEMBER"
  (
    "MEMBERID"  NUMBER NOT NULL ENABLE,
    "TYPE"      CHAR(1 BYTE) NOT NULL ENABLE,
    "NAME"      VARCHAR2(100 BYTE),
    "CUSTOMID"  VARCHAR2(100 BYTE),
    "LATITUDE"  VARCHAR2(20 BYTE),
    "LONGITUDE" VARCHAR2(20 BYTE),
    "STATUS"    CHAR(1 BYTE),
    "SITE"      VARCHAR2(100 BYTE),
    "TASK"      VARCHAR2(200 BYTE),
    "ADDRESS"   VARCHAR2(200 BYTE),
    "STARTTIME" DATE,
    "ARRIVALTIME" DATE,
    "DSCPT" VARCHAR2(20 BYTE),
    CONSTRAINT "MAP_MEMBER_PK" PRIMARY KEY ("MEMBERID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT) TABLESPACE "KAMORU" ENABLE
  )
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
  )
  TABLESPACE "KAMORU" ;
COMMENT ON COLUMN "KAMORU"."MAP_MEMBER"."TYPE"
IS
  'C(customer), M(member)';
  COMMENT ON COLUMN "KAMORU"."MAP_MEMBER"."STATUS"
IS
  'if type is M, O(outing), B(business trip), D(desk job)';
CREATE OR REPLACE TRIGGER "KAMORU"."MAP_MEMBER_TRG" BEFORE
  INSERT ON MAP_MEMBER FOR EACH ROW BEGIN <<COLUMN_SEQUENCES>> BEGIN IF :NEW.MEMBERID IS NULL THEN
  SELECT MAP_MEMBER_SEQ.NEXTVAL INTO :NEW.MEMBERID FROM DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "KAMORU"."MAP_MEMBER_TRG" ENABLE;